#if ( ARDUINO >= 100 )
   #include <Arduino.h>
#else
   #include <WProgram.h>
#endif

#include <Servo.h>
#include <ros.h>
#include <geometry_msgs/Twist>

ros::NodeHandle nh;

Servo l_servo;
Servo r_servo;

void servo_cb( const geometry_msgs::Twist& cmd_msg ){
  if ( cmd_msg.angular.z == 0 && cmd_msg.linear.x == 0 ){
	l_servo.write( 90 );
	r_servo.write( 90 );
  } else {
	if ( cmd_msg.angular.z < 0 ){
                derecha( int (cmd_msg.angular.z * - 180 ));
	} else if ( cmd_msg.angular.z > 0 ){
		izquierda( int (cmd_msg.angular.z * 180));
	} else if ( cmd_msg.linear.x < 0 ){
	        atras( int (cmd_msg.linear.x * -180));
	} else if ( cmd_msg.linear.x > 0 ){
		adelante( int (cmd_msg.linear.x * 180));
	}
  }
   digitalWrite( 13, HIGH-digitalRead( 13 ) );
}

ros::Subscriber<geometry_msgs::Twist> sub( "cmd_vel", servo_cb ); 

void setup(){
   pinMode( 13, OUTPUT );
	
   nh.initNode();
   nh.subscribe(sub);

   l_servo.attach( 5 );
   r_servo.attach( 6 );  
}

void loop(){
   nh.spinOnce();
   delay( 1 );
}

void adelante(int velocidad){
   l_servo.write( velocidad );
   r_servo.write( 180 - velocidad ); 
}
void atras (int velocidad){
   l_servo.write( 180 - velocidad );
   r_servo.write(  velocidad );
}

void izquierda(int velocidad){
   l_servo.write( velocidad );
   r_servo.write( velocidad );
}

void derecha(int velocidad){
   l_servo.write( 180 - velocidad );
   r_servo.write( 180 - velocidad );
}
